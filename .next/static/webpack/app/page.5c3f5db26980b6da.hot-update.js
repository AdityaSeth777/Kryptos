"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/database.ts":
/*!*************************!*\
  !*** ./lib/database.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Database: function() { return /* binding */ Database; }\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nclass Database {\n    static getInstance() {\n        if (!Database.instance) {\n            Database.instance = new Database();\n        }\n        return Database.instance;\n    }\n    async signInWithWallet(walletAddress) {\n        try {\n            // Sign in with wallet address as email (since we need an email format)\n            const { data, error } = await this.supabase.auth.signInWithPassword({\n                email: \"\".concat(walletAddress.toLowerCase(), \"@web3chat.com\"),\n                password: walletAddress\n            });\n            if (error) {\n                // If user doesn't exist, sign up\n                if (error.message.includes(\"Invalid login credentials\")) {\n                    const { data: signUpData, error: signUpError } = await this.supabase.auth.signUp({\n                        email: \"\".concat(walletAddress.toLowerCase(), \"@web3chat.com\"),\n                        password: walletAddress\n                    });\n                    if (signUpError) throw signUpError;\n                    return signUpData;\n                }\n                throw error;\n            }\n            return data;\n        } catch (error) {\n            console.error(\"Auth error:\", error);\n            throw error;\n        }\n    }\n    async storeMessage(senderId, recipientId, message) {\n        try {\n            // Ensure sender is authenticated\n            const { data: { session } } = await this.supabase.auth.getSession();\n            if (!session) {\n                await this.signInWithWallet(senderId);\n            }\n            const { data, error } = await this.supabase.from(\"messages\").insert([\n                {\n                    sender_id: senderId.toLowerCase(),\n                    recipient_id: recipientId.toLowerCase(),\n                    message,\n                    timestamp: new Date().toISOString()\n                }\n            ]).select();\n            if (error) {\n                console.error(\"Error storing message:\", error);\n                throw error;\n            }\n            return data;\n        } catch (error) {\n            console.error(\"Error in storeMessage:\", error);\n            throw error;\n        }\n    }\n    async getMessages(userId) {\n        try {\n            const { data, error } = await this.supabase.from(\"messages\").select(\"*\").or(\"sender_id.eq.\".concat(userId.toLowerCase(), \",recipient_id.eq.\").concat(userId.toLowerCase())).order(\"timestamp\", {\n                ascending: true\n            });\n            if (error) {\n                console.error(\"Error fetching messages:\", error);\n                throw error;\n            }\n            return data;\n        } catch (error) {\n            console.error(\"Error in getMessages:\", error);\n            throw error;\n        }\n    }\n    subscribeToMessages(userId, callback) {\n        const channel = this.supabase.channel(\"messages\").on(\"postgres_changes\", {\n            event: \"INSERT\",\n            schema: \"public\",\n            table: \"messages\",\n            filter: \"recipient_id=eq.\".concat(userId.toLowerCase())\n        }, (payload)=>callback(payload.new)).subscribe();\n        return ()=>{\n            channel.unsubscribe();\n        };\n    }\n    async signOut() {\n        await this.supabase.auth.signOut();\n    }\n    destroy() {\n        this.supabase.removeAllChannels();\n    }\n    constructor(){\n        const supabaseUrl = \"https://oaffyeoqdojzqhkmebsw.supabase.co\";\n        const supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9hZmZ5ZW9xZG9qenFoa21lYnN3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzcwNDEyNTIsImV4cCI6MjA1MjYxNzI1Mn0.GVjXT2B9Iptap70ENS_c5TmlAElvI3_DpifCullfYpM\";\n        if (!supabaseUrl || !supabaseKey) {\n            throw new Error(\"Missing Supabase credentials\");\n        }\n        this.supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseKey);\n    }\n}\nDatabase.instance = null;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/database.ts\n"));

/***/ })

});