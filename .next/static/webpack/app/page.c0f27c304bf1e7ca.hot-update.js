"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/database.ts":
/*!*************************!*\
  !*** ./lib/database.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Database: function() { return /* binding */ Database; }\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nclass Database {\n    static getInstance() {\n        if (!Database.instance) {\n            Database.instance = new Database();\n        }\n        return Database.instance;\n    }\n    async storeMessage(senderId, recipientId, message) {\n        const { data, error } = await this.supabase.from(\"messages\").insert([\n            {\n                sender_id: senderId,\n                recipient_id: recipientId,\n                message: message,\n                timestamp: new Date().toISOString()\n            }\n        ]).select();\n        if (error) {\n            console.error(\"Error storing message:\", error);\n            throw error;\n        }\n        return data;\n    }\n    async getMessages(userId) {\n        const { data, error } = await this.supabase.from(\"messages\").select(\"*\").or(\"sender_id.eq.\".concat(userId, \",recipient_id.eq.\").concat(userId)).order(\"timestamp\", {\n            ascending: true\n        });\n        if (error) {\n            console.error(\"Error fetching messages:\", error);\n            throw error;\n        }\n        return data;\n    }\n    subscribeToMessages(userId, callback) {\n        // Subscribe to new messages\n        const channel = this.supabase.channel(\"messages\").on(\"postgres_changes\", {\n            event: \"INSERT\",\n            schema: \"public\",\n            table: \"messages\",\n            filter: \"recipient_id=eq.\".concat(userId)\n        }, (payload)=>callback(payload.new)).subscribe();\n        return ()=>{\n            channel.unsubscribe();\n        };\n    }\n    destroy() {\n        this.supabase.removeAllChannels();\n    }\n    constructor(){\n        const supabaseUrl = \"https://oaffyeoqdojzqhkmebsw.supabase.co\";\n        const supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9hZmZ5ZW9xZG9qenFoa21lYnN3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzcwNDEyNTIsImV4cCI6MjA1MjYxNzI1Mn0.GVjXT2B9Iptap70ENS_c5TmlAElvI3_DpifCullfYpM\";\n        if (!supabaseUrl || !supabaseKey) {\n            throw new Error(\"Missing Supabase credentials\");\n        }\n        this.supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseKey);\n    }\n}\nDatabase.instance = null;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9kYXRhYmFzZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRDtBQUU5QyxNQUFNQztJQWVYLE9BQU9DLGNBQXdCO1FBQzdCLElBQUksQ0FBQ0QsU0FBU0UsUUFBUSxFQUFFO1lBQ3RCRixTQUFTRSxRQUFRLEdBQUcsSUFBSUY7UUFDMUI7UUFDQSxPQUFPQSxTQUFTRSxRQUFRO0lBQzFCO0lBRUEsTUFBTUMsYUFBYUMsUUFBZ0IsRUFBRUMsV0FBbUIsRUFBRUMsT0FBZSxFQUFFO1FBQ3pFLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNLElBQUksQ0FBQ0MsUUFBUSxDQUN4Q0MsSUFBSSxDQUFDLFlBQ0xDLE1BQU0sQ0FBQztZQUNOO2dCQUNFQyxXQUFXUjtnQkFDWFMsY0FBY1I7Z0JBQ2RDLFNBQVNBO2dCQUNUUSxXQUFXLElBQUlDLE9BQU9DLFdBQVc7WUFDbkM7U0FDRCxFQUNBQyxNQUFNO1FBRVQsSUFBSVQsT0FBTztZQUNUVSxRQUFRVixLQUFLLENBQUMsMEJBQTBCQTtZQUN4QyxNQUFNQTtRQUNSO1FBRUEsT0FBT0Q7SUFDVDtJQUVBLE1BQU1ZLFlBQVlDLE1BQWMsRUFBRTtRQUNoQyxNQUFNLEVBQUViLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTSxJQUFJLENBQUNDLFFBQVEsQ0FDeENDLElBQUksQ0FBQyxZQUNMTyxNQUFNLENBQUMsS0FDUEksRUFBRSxDQUFDLGdCQUEwQ0QsT0FBMUJBLFFBQU8scUJBQTBCLE9BQVBBLFNBQzdDRSxLQUFLLENBQUMsYUFBYTtZQUFFQyxXQUFXO1FBQUs7UUFFeEMsSUFBSWYsT0FBTztZQUNUVSxRQUFRVixLQUFLLENBQUMsNEJBQTRCQTtZQUMxQyxNQUFNQTtRQUNSO1FBRUEsT0FBT0Q7SUFDVDtJQUVBaUIsb0JBQW9CSixNQUFjLEVBQUVLLFFBQWdDLEVBQUU7UUFDcEUsNEJBQTRCO1FBQzVCLE1BQU1DLFVBQVUsSUFBSSxDQUFDakIsUUFBUSxDQUMxQmlCLE9BQU8sQ0FBQyxZQUNSQyxFQUFFLENBQ0Qsb0JBQ0E7WUFDRUMsT0FBTztZQUNQQyxRQUFRO1lBQ1JDLE9BQU87WUFDUEMsUUFBUSxtQkFBMEIsT0FBUFg7UUFDN0IsR0FDQSxDQUFDWSxVQUFZUCxTQUFTTyxRQUFRQyxHQUFHLEdBRWxDQyxTQUFTO1FBRVosT0FBTztZQUNMUixRQUFRUyxXQUFXO1FBQ3JCO0lBQ0Y7SUFFQUMsVUFBVTtRQUNSLElBQUksQ0FBQzNCLFFBQVEsQ0FBQzRCLGlCQUFpQjtJQUNqQztJQTdFQUMsYUFBYztRQUNaLE1BQU1DLGNBQWNDLDBDQUFvQztRQUN4RCxNQUFNRyxjQUFjSCxrTkFBeUM7UUFFN0QsSUFBSSxDQUFDRCxlQUFlLENBQUNJLGFBQWE7WUFDaEMsTUFBTSxJQUFJRSxNQUFNO1FBQ2xCO1FBRUEsSUFBSSxDQUFDcEMsUUFBUSxHQUFHVixtRUFBWUEsQ0FBQ3dDLGFBQWFJO0lBQzVDO0FBcUVGO0FBbEZhM0MsU0FFSUUsV0FBNEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2RhdGFiYXNlLnRzPzRkNDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcblxuZXhwb3J0IGNsYXNzIERhdGFiYXNlIHtcbiAgcHJpdmF0ZSBzdXBhYmFzZTtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IERhdGFiYXNlIHwgbnVsbCA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgY29uc3Qgc3VwYWJhc2VVcmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkw7XG4gICAgY29uc3Qgc3VwYWJhc2VLZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWTtcblxuICAgIGlmICghc3VwYWJhc2VVcmwgfHwgIXN1cGFiYXNlS2V5KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgU3VwYWJhc2UgY3JlZGVudGlhbHMnKTtcbiAgICB9XG5cbiAgICB0aGlzLnN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUtleSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0SW5zdGFuY2UoKTogRGF0YWJhc2Uge1xuICAgIGlmICghRGF0YWJhc2UuaW5zdGFuY2UpIHtcbiAgICAgIERhdGFiYXNlLmluc3RhbmNlID0gbmV3IERhdGFiYXNlKCk7XG4gICAgfVxuICAgIHJldHVybiBEYXRhYmFzZS5pbnN0YW5jZTtcbiAgfVxuXG4gIGFzeW5jIHN0b3JlTWVzc2FnZShzZW5kZXJJZDogc3RyaW5nLCByZWNpcGllbnRJZDogc3RyaW5nLCBtZXNzYWdlOiBzdHJpbmcpIHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCB0aGlzLnN1cGFiYXNlXG4gICAgICAuZnJvbSgnbWVzc2FnZXMnKVxuICAgICAgLmluc2VydChbXG4gICAgICAgIHtcbiAgICAgICAgICBzZW5kZXJfaWQ6IHNlbmRlcklkLFxuICAgICAgICAgIHJlY2lwaWVudF9pZDogcmVjaXBpZW50SWQsXG4gICAgICAgICAgbWVzc2FnZTogbWVzc2FnZSxcbiAgICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgfSxcbiAgICAgIF0pXG4gICAgICAuc2VsZWN0KCk7XG5cbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHN0b3JpbmcgbWVzc2FnZTonLCBlcnJvcik7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIGFzeW5jIGdldE1lc3NhZ2VzKHVzZXJJZDogc3RyaW5nKSB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgdGhpcy5zdXBhYmFzZVxuICAgICAgLmZyb20oJ21lc3NhZ2VzJylcbiAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgLm9yKGBzZW5kZXJfaWQuZXEuJHt1c2VySWR9LHJlY2lwaWVudF9pZC5lcS4ke3VzZXJJZH1gKVxuICAgICAgLm9yZGVyKCd0aW1lc3RhbXAnLCB7IGFzY2VuZGluZzogdHJ1ZSB9KTtcblxuICAgIGlmIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgbWVzc2FnZXM6JywgZXJyb3IpO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuXG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cblxuICBzdWJzY3JpYmVUb01lc3NhZ2VzKHVzZXJJZDogc3RyaW5nLCBjYWxsYmFjazogKG1lc3NhZ2U6IGFueSkgPT4gdm9pZCkge1xuICAgIC8vIFN1YnNjcmliZSB0byBuZXcgbWVzc2FnZXNcbiAgICBjb25zdCBjaGFubmVsID0gdGhpcy5zdXBhYmFzZVxuICAgICAgLmNoYW5uZWwoJ21lc3NhZ2VzJylcbiAgICAgIC5vbihcbiAgICAgICAgJ3Bvc3RncmVzX2NoYW5nZXMnLFxuICAgICAgICB7XG4gICAgICAgICAgZXZlbnQ6ICdJTlNFUlQnLFxuICAgICAgICAgIHNjaGVtYTogJ3B1YmxpYycsXG4gICAgICAgICAgdGFibGU6ICdtZXNzYWdlcycsXG4gICAgICAgICAgZmlsdGVyOiBgcmVjaXBpZW50X2lkPWVxLiR7dXNlcklkfWAsXG4gICAgICAgIH0sXG4gICAgICAgIChwYXlsb2FkKSA9PiBjYWxsYmFjayhwYXlsb2FkLm5ldylcbiAgICAgIClcbiAgICAgIC5zdWJzY3JpYmUoKTtcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjaGFubmVsLnVuc3Vic2NyaWJlKCk7XG4gICAgfTtcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5zdXBhYmFzZS5yZW1vdmVBbGxDaGFubmVscygpO1xuICB9XG59Il0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsIkRhdGFiYXNlIiwiZ2V0SW5zdGFuY2UiLCJpbnN0YW5jZSIsInN0b3JlTWVzc2FnZSIsInNlbmRlcklkIiwicmVjaXBpZW50SWQiLCJtZXNzYWdlIiwiZGF0YSIsImVycm9yIiwic3VwYWJhc2UiLCJmcm9tIiwiaW5zZXJ0Iiwic2VuZGVyX2lkIiwicmVjaXBpZW50X2lkIiwidGltZXN0YW1wIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwic2VsZWN0IiwiY29uc29sZSIsImdldE1lc3NhZ2VzIiwidXNlcklkIiwib3IiLCJvcmRlciIsImFzY2VuZGluZyIsInN1YnNjcmliZVRvTWVzc2FnZXMiLCJjYWxsYmFjayIsImNoYW5uZWwiLCJvbiIsImV2ZW50Iiwic2NoZW1hIiwidGFibGUiLCJmaWx0ZXIiLCJwYXlsb2FkIiwibmV3Iiwic3Vic2NyaWJlIiwidW5zdWJzY3JpYmUiLCJkZXN0cm95IiwicmVtb3ZlQWxsQ2hhbm5lbHMiLCJjb25zdHJ1Y3RvciIsInN1cGFiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsInN1cGFiYXNlS2V5IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/database.ts\n"));

/***/ })

});