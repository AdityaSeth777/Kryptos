"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/database.ts":
/*!*************************!*\
  !*** ./lib/database.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Database: function() { return /* binding */ Database; }\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nclass Database {\n    async storeMessage(senderId, recipientId, encryptedMessage) {\n        const { data, error } = await this.supabase.from(\"messages\").insert([\n            {\n                sender_id: senderId,\n                recipient_id: recipientId,\n                message: encryptedMessage,\n                timestamp: new Date().toISOString()\n            }\n        ]);\n        if (error) throw error;\n        return data;\n    }\n    subscribeToMessages(senderId, recipientId, callback) {\n        // Subscribe to new messages\n        const channel = this.supabase.channel(\"messages\").on(\"postgres_changes\", {\n            event: \"INSERT\",\n            schema: \"public\",\n            table: \"messages\",\n            filter: \"recipient_id=eq.\".concat(recipientId)\n        }, (payload)=>callback(payload.new)).subscribe();\n        // Fetch existing messages\n        this.supabase.from(\"messages\").select(\"*\").or(\"sender_id.eq.\".concat(senderId, \",recipient_id.eq.\").concat(recipientId)).order(\"timestamp\", {\n            ascending: true\n        }).then((param)=>{\n            let { data } = param;\n            if (data) {\n                data.forEach(callback);\n            }\n        });\n        return ()=>{\n            channel.unsubscribe();\n        };\n    }\n    // Clean up method\n    destroy() {\n        this.supabase.removeAllChannels();\n    }\n    constructor(){\n        this.supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(\"https://oaffyeoqdojzqhkmebsw.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9hZmZ5ZW9xZG9qenFoa21lYnN3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzcwNDEyNTIsImV4cCI6MjA1MjYxNzI1Mn0.GVjXT2B9Iptap70ENS_c5TmlAElvI3_DpifCullfYpM\");\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9kYXRhYmFzZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRDtBQUU5QyxNQUFNQztJQVVYLE1BQU1DLGFBQWFDLFFBQWdCLEVBQUVDLFdBQW1CLEVBQUVDLGdCQUF3QixFQUFFO1FBQ2xGLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNLElBQUksQ0FBQ0MsUUFBUSxDQUN4Q0MsSUFBSSxDQUFDLFlBQ0xDLE1BQU0sQ0FBQztZQUFDO2dCQUNQQyxXQUFXUjtnQkFDWFMsY0FBY1I7Z0JBQ2RTLFNBQVNSO2dCQUNUUyxXQUFXLElBQUlDLE9BQU9DLFdBQVc7WUFDbkM7U0FBRTtRQUVKLElBQUlULE9BQU8sTUFBTUE7UUFDakIsT0FBT0Q7SUFDVDtJQUVBVyxvQkFBb0JkLFFBQWdCLEVBQUVDLFdBQW1CLEVBQUVjLFFBQWdDLEVBQUU7UUFDM0YsNEJBQTRCO1FBQzVCLE1BQU1DLFVBQVUsSUFBSSxDQUFDWCxRQUFRLENBQzFCVyxPQUFPLENBQUMsWUFDUkMsRUFBRSxDQUNELG9CQUNBO1lBQ0VDLE9BQU87WUFDUEMsUUFBUTtZQUNSQyxPQUFPO1lBQ1BDLFFBQVEsbUJBQStCLE9BQVpwQjtRQUM3QixHQUNBLENBQUNxQixVQUFZUCxTQUFTTyxRQUFRQyxHQUFHLEdBRWxDQyxTQUFTO1FBRVosMEJBQTBCO1FBQzFCLElBQUksQ0FBQ25CLFFBQVEsQ0FDVkMsSUFBSSxDQUFDLFlBQ0xtQixNQUFNLENBQUMsS0FDUEMsRUFBRSxDQUFDLGdCQUE0Q3pCLE9BQTVCRCxVQUFTLHFCQUErQixPQUFaQyxjQUMvQzBCLEtBQUssQ0FBQyxhQUFhO1lBQUVDLFdBQVc7UUFBSyxHQUNyQ0MsSUFBSSxDQUFDO2dCQUFDLEVBQUUxQixJQUFJLEVBQUU7WUFDYixJQUFJQSxNQUFNO2dCQUNSQSxLQUFLMkIsT0FBTyxDQUFDZjtZQUNmO1FBQ0Y7UUFFRixPQUFPO1lBQ0xDLFFBQVFlLFdBQVc7UUFDckI7SUFDRjtJQUVBLGtCQUFrQjtJQUNsQkMsVUFBVTtRQUNSLElBQUksQ0FBQzNCLFFBQVEsQ0FBQzRCLGlCQUFpQjtJQUNqQztJQXpEQUMsYUFBYztRQUNaLElBQUksQ0FBQzdCLFFBQVEsR0FBR1IsbUVBQVlBLENBQzFCc0MsMENBQW9DLEVBQ3BDQSxrTkFBeUM7SUFFN0M7QUFxREYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2RhdGFiYXNlLnRzPzRkNDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcblxuZXhwb3J0IGNsYXNzIERhdGFiYXNlIHtcbiAgcHJpdmF0ZSBzdXBhYmFzZTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KFxuICAgICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMISxcbiAgICAgIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIVxuICAgICk7XG4gIH1cblxuICBhc3luYyBzdG9yZU1lc3NhZ2Uoc2VuZGVySWQ6IHN0cmluZywgcmVjaXBpZW50SWQ6IHN0cmluZywgZW5jcnlwdGVkTWVzc2FnZTogc3RyaW5nKSB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgdGhpcy5zdXBhYmFzZVxuICAgICAgLmZyb20oJ21lc3NhZ2VzJylcbiAgICAgIC5pbnNlcnQoW3tcbiAgICAgICAgc2VuZGVyX2lkOiBzZW5kZXJJZCxcbiAgICAgICAgcmVjaXBpZW50X2lkOiByZWNpcGllbnRJZCxcbiAgICAgICAgbWVzc2FnZTogZW5jcnlwdGVkTWVzc2FnZSxcbiAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICAgIH1dKTtcblxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cblxuICBzdWJzY3JpYmVUb01lc3NhZ2VzKHNlbmRlcklkOiBzdHJpbmcsIHJlY2lwaWVudElkOiBzdHJpbmcsIGNhbGxiYWNrOiAobWVzc2FnZTogYW55KSA9PiB2b2lkKSB7XG4gICAgLy8gU3Vic2NyaWJlIHRvIG5ldyBtZXNzYWdlc1xuICAgIGNvbnN0IGNoYW5uZWwgPSB0aGlzLnN1cGFiYXNlXG4gICAgICAuY2hhbm5lbCgnbWVzc2FnZXMnKVxuICAgICAgLm9uKFxuICAgICAgICAncG9zdGdyZXNfY2hhbmdlcycsXG4gICAgICAgIHtcbiAgICAgICAgICBldmVudDogJ0lOU0VSVCcsXG4gICAgICAgICAgc2NoZW1hOiAncHVibGljJyxcbiAgICAgICAgICB0YWJsZTogJ21lc3NhZ2VzJyxcbiAgICAgICAgICBmaWx0ZXI6IGByZWNpcGllbnRfaWQ9ZXEuJHtyZWNpcGllbnRJZH1gXG4gICAgICAgIH0sXG4gICAgICAgIChwYXlsb2FkKSA9PiBjYWxsYmFjayhwYXlsb2FkLm5ldylcbiAgICAgIClcbiAgICAgIC5zdWJzY3JpYmUoKTtcblxuICAgIC8vIEZldGNoIGV4aXN0aW5nIG1lc3NhZ2VzXG4gICAgdGhpcy5zdXBhYmFzZVxuICAgICAgLmZyb20oJ21lc3NhZ2VzJylcbiAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgLm9yKGBzZW5kZXJfaWQuZXEuJHtzZW5kZXJJZH0scmVjaXBpZW50X2lkLmVxLiR7cmVjaXBpZW50SWR9YClcbiAgICAgIC5vcmRlcigndGltZXN0YW1wJywgeyBhc2NlbmRpbmc6IHRydWUgfSlcbiAgICAgIC50aGVuKCh7IGRhdGEgfSkgPT4ge1xuICAgICAgICBpZiAoZGF0YSkge1xuICAgICAgICAgIGRhdGEuZm9yRWFjaChjYWxsYmFjayk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNoYW5uZWwudW5zdWJzY3JpYmUoKTtcbiAgICB9O1xuICB9XG5cbiAgLy8gQ2xlYW4gdXAgbWV0aG9kXG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5zdXBhYmFzZS5yZW1vdmVBbGxDaGFubmVscygpO1xuICB9XG59Il0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsIkRhdGFiYXNlIiwic3RvcmVNZXNzYWdlIiwic2VuZGVySWQiLCJyZWNpcGllbnRJZCIsImVuY3J5cHRlZE1lc3NhZ2UiLCJkYXRhIiwiZXJyb3IiLCJzdXBhYmFzZSIsImZyb20iLCJpbnNlcnQiLCJzZW5kZXJfaWQiLCJyZWNpcGllbnRfaWQiLCJtZXNzYWdlIiwidGltZXN0YW1wIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwic3Vic2NyaWJlVG9NZXNzYWdlcyIsImNhbGxiYWNrIiwiY2hhbm5lbCIsIm9uIiwiZXZlbnQiLCJzY2hlbWEiLCJ0YWJsZSIsImZpbHRlciIsInBheWxvYWQiLCJuZXciLCJzdWJzY3JpYmUiLCJzZWxlY3QiLCJvciIsIm9yZGVyIiwiYXNjZW5kaW5nIiwidGhlbiIsImZvckVhY2giLCJ1bnN1YnNjcmliZSIsImRlc3Ryb3kiLCJyZW1vdmVBbGxDaGFubmVscyIsImNvbnN0cnVjdG9yIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/database.ts\n"));

/***/ })

});